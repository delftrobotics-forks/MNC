name: "VGG16"

input: "data"
input_shape {
	dim: 1
	dim: 3
	dim: 224
	dim: 224
}

input: "im_info"
input_shape {
	dim: 1
	dim: 3
}

# ------------ Convolution -----------

layer {
	name: "conv1_1"
	type: "Convolution"
	bottom: "data"
	top: "conv1_1"
	param {
		lr_mult: 0
		decay_mult: 0
	}
	param {
		lr_mult: 0
		decay_mult: 0
	}
	convolution_param {
		num_output: 64
		pad: 1
		kernel_size: 3
	}
}

layer {
	name: "relu1_1"
	type: "ReLU"
	bottom: "conv1_1"
	top: "conv1_1"
}

layer {
	name: "conv1_2"
	type: "Convolution"
	bottom: "conv1_1"
	top: "conv1_2"
	param {
		lr_mult: 0
		decay_mult: 0
	}
	param {
		lr_mult: 0
		decay_mult: 0
	}
	convolution_param {
		num_output: 64
		pad: 1
		kernel_size: 3
	}
}

layer {
	name: "relu1_2"
	type: "ReLU"
	bottom: "conv1_2"
	top: "conv1_2"
}

layer {
	name: "pool1"
	type: "Pooling"
	bottom: "conv1_2"
	top: "pool1"
	pooling_param {
		pool: MAX
		kernel_size: 2
		stride: 2
	}
}

layer {
	name: "conv2_1"
	type: "Convolution"
	bottom: "pool1"
	top: "conv2_1"
	param {
		lr_mult: 0
		decay_mult: 0
	}
	param {
		lr_mult: 0
		decay_mult: 0
	}
	convolution_param {
		num_output: 128
		pad: 1
		kernel_size: 3
	}
}

layer {
	name: "relu2_1"
	type: "ReLU"
	bottom: "conv2_1"
	top: "conv2_1"
}

layer {
	name: "conv2_2"
	type: "Convolution"
	bottom: "conv2_1"
	top: "conv2_2"
	param {
		lr_mult: 0
		decay_mult: 0
	}
	param {
		lr_mult: 0
		decay_mult: 0
	}
	convolution_param {
		num_output: 128
		pad: 1
		kernel_size: 3
	}
}

layer {
	name: "relu2_2"
	type: "ReLU"
	bottom: "conv2_2"
	top: "conv2_2"
}

layer {
	name: "pool2"
	type: "Pooling"
	bottom: "conv2_2"
	top: "pool2"
	pooling_param {
		pool: MAX
		kernel_size: 2
		stride: 2
	}
}

layer {
	name: "conv3_1"
	type: "Convolution"
	bottom: "pool2"
	top: "conv3_1"
	param {
		lr_mult: 1
		decay_mult: 1
	}
	param {
		lr_mult: 2
		decay_mult: 0
	}
	convolution_param {
		num_output: 256
		pad: 1
		kernel_size: 3
	}
}

layer {
	name: "relu3_1"
	type: "ReLU"
	bottom: "conv3_1"
	top: "conv3_1"
}

layer {
	name: "conv3_2"
	type: "Convolution"
	bottom: "conv3_1"
	top: "conv3_2"
	param {
		lr_mult: 1
		decay_mult: 1
	}
	param {
		lr_mult: 2
		decay_mult: 0
	}
	convolution_param {
		num_output: 256
		pad: 1
		kernel_size: 3
	}
}

layer {
	name: "relu3_2"
	type: "ReLU"
	bottom: "conv3_2"
	top: "conv3_2"
}

layer {
	name: "conv3_3"
	type: "Convolution"
	bottom: "conv3_2"
	top: "conv3_3"
	param {
		lr_mult: 1
		decay_mult: 1
	}
	param {
		lr_mult: 2
		decay_mult: 0
	}
	convolution_param {
		num_output: 256
		pad: 1
		kernel_size: 3
	}
}

layer {
	name: "relu3_3"
	type: "ReLU"
	bottom: "conv3_3"
	top: "conv3_3"
}

layer {
	name: "pool3"
	type: "Pooling"
	bottom: "conv3_3"
	top: "pool3"
	pooling_param {
		pool: MAX
		kernel_size: 2
		stride: 2
	}
}

layer {
	name: "conv4_1"
	type: "Convolution"
	bottom: "pool3"
	top: "conv4_1"
	param {
		lr_mult: 1
		decay_mult: 1
	}
	param {
		lr_mult: 2
		decay_mult: 0
	}
	convolution_param {
		num_output: 512
		pad: 1
		kernel_size: 3
	}
}

layer {
	name: "relu4_1"
	type: "ReLU"
	bottom: "conv4_1"
	top: "conv4_1"
}

layer {
	name: "conv4_2"
	type: "Convolution"
	bottom: "conv4_1"
	top: "conv4_2"
	param {
		lr_mult: 1
		decay_mult: 1
	}
	param {
		lr_mult: 2
		decay_mult: 0
	}
	convolution_param {
		num_output: 512
		pad: 1
		kernel_size: 3
	}
}

layer {
	name: "relu4_2"
	type: "ReLU"
	bottom: "conv4_2"
	top: "conv4_2"
}

layer {
	name: "conv4_3"
	type: "Convolution"
	bottom: "conv4_2"
	top: "conv4_3"
	param {
		lr_mult: 1
		decay_mult: 1
	}
	param {
		lr_mult: 2
		decay_mult: 0
	}
	convolution_param {
		num_output: 512
		pad: 1
		kernel_size: 3
	}
}

layer {
	name: "relu4_3"
	type: "ReLU"
	bottom: "conv4_3"
	top: "conv4_3"
}

layer {
	name: "pool4"
	type: "Pooling"
	bottom: "conv4_3"
	top: "pool4"
	pooling_param {
		pool: MAX
		kernel_size: 2
		stride: 2
	}
}

layer {
	name: "conv5_1"
	type: "Convolution"
	bottom: "pool4"
	top: "conv5_1"
	param {
		lr_mult: 1
		decay_mult: 1
	}
	param {
		lr_mult: 2
		decay_mult: 0
	}
	convolution_param {
		num_output: 512
		pad: 1
		kernel_size: 3
	}
}

layer {
	name: "relu5_1"
	type: "ReLU"
	bottom: "conv5_1"
	top: "conv5_1"
}

layer {
	name: "conv5_2"
	type: "Convolution"
	bottom: "conv5_1"
	top: "conv5_2"
	param {
		lr_mult: 1
		decay_mult: 1
	}
	param {
		lr_mult: 2
		decay_mult: 0
	}
	convolution_param {
		num_output: 512
		pad: 1
		kernel_size: 3
	}
}

layer {
	name: "relu5_2"
	type: "ReLU"
	bottom: "conv5_2"
	top: "conv5_2"
}

layer {
	name: "conv5_3"
	type: "Convolution"
	bottom: "conv5_2"
	top: "conv5_3"
	param {
		lr_mult: 1
		decay_mult: 1
	}
	param {
		lr_mult: 2
		decay_mult: 0
	}
	convolution_param {
		num_output: 512
		pad: 1
		kernel_size: 3
	}
}

layer {
	name: "relu5_3"
	type: "ReLU"
	bottom: "conv5_3"
	top: "conv5_3"
}

#------------ RPN ------------

layer {
	name: "rpn_conv_3x3"
	type: "Convolution"
	bottom: "conv5_3"
	top: "rpn_output"
	param { lr_mult: 1.0 decay_mult: 1.0 }
	param { lr_mult: 2.0 decay_mult: 0 }
	convolution_param {
		num_output: 512
		kernel_size: 3 pad: 1 stride: 1
		weight_filler { type: "gaussian" std: 0.01 }
		bias_filler { type: "constant" value: 0 }
	}
}

layer {
	name: "rpn_relu_3x3"
	type: "ReLU"
	bottom: "rpn_output"
	top: "rpn_output"
}

layer {
	name: "rpn_cls_score"
	type: "Convolution"
	bottom: "rpn_output"
	top: "rpn_cls_score"
	param { lr_mult: 1.0 decay_mult: 1.0 }
	param { lr_mult: 2.0 decay_mult: 0 }
	convolution_param {
		num_output: 18   # 2(bg/fg) * 9(anchors)
		kernel_size: 1 pad: 0 stride: 1
		weight_filler { type: "gaussian" std: 0.01 }
		bias_filler { type: "constant" value: 0 }
	}
}

layer {
	name: "rpn_bbox_pred"
	type: "Convolution"
	bottom: "rpn_output"
	top: "rpn_bbox_pred"
	param { lr_mult: 1.0 decay_mult: 1.0 }
	param { lr_mult: 2.0 decay_mult: 0 }
	convolution_param {
		num_output: 36   # 4 * 9(anchors)
		kernel_size: 1 pad: 0 stride: 1
		weight_filler { type: "gaussian" std: 0.01 }
		bias_filler { type: "constant" value: 0 }
	}
}

layer {
	 bottom: "rpn_cls_score"
	 top: "rpn_cls_score_reshape"
	 name: "rpn_cls_score_reshape"
	 type: "Reshape"
	 reshape_param { shape { dim: 0 dim: 2 dim: -1 dim: 0 } }
}

#------------ Anchor to Proposal ------------

layer {
	name: "rpn_cls_prob"
	type: "Softmax"
	bottom: "rpn_cls_score_reshape"
	top: "rpn_cls_prob"
}

layer {
	name: 'rpn_cls_prob_reshape'
	type: 'Reshape'
	bottom: 'rpn_cls_prob'
	top: 'rpn_cls_prob_reshape'
	reshape_param { shape { dim: 0 dim: 18 dim: -1 dim: 0 } }
}

layer {
	name: 'proposal'
	type: 'Python'
	bottom: 'rpn_cls_prob_reshape'
	bottom: 'rpn_bbox_pred'
	bottom: 'im_info'
	top: 'rois'
	top: 'rpn_scores'
	python_param {
		module: 'multitask_network_cascades.pylayer.proposal_layer'
		layer: 'ProposalLayer'
		param_str: "{'feat_stride': 16, 'gradient_scale': 1}"
	}
}

layer {
	name: 'silence'
	type: 'Silence'
	bottom: 'rpn_scores'
}

#------------ Roi Warping ------------

layer {
	name: "roi_interpolate_conv5"
	type: "Module"
	bottom: "conv5_3"
	bottom: "rois"
	top: "roi_interpolate_conv5"
	module_param {
		module: "mnc"
		type: "ROIWarping"
		param_str: "{ 'pooled_w': 14, 'pooled_h': 14, 'spatial_scale': 0.0625 }"
	}
}

#------------ Mask Estimation ------------

layer {
	name: "fc6_maskest"
	type: "InnerProduct"
	bottom: "roi_interpolate_conv5"
	top: "fc6_maskest"
	param { name: "fc6_maskest_w"}
	param { name: "fc6_maskest_b"}
	inner_product_param {
		num_output: 256
	}
}

layer {
	name: "relu6_maskest"
	type: "ReLU"
	bottom: "fc6_maskest"
	top: "fc6_maskest"
}

layer {
	name: "mask_pred"
	type: "InnerProduct"
	bottom: "fc6_maskest"
	top: "mask_pred"
	param { name: "mask_pred_w" }
	param { name: "mask_pred_b" }
	inner_product_param {
		num_output: 441 # 21*21
	}
}

layer {
	name: "mask_output"
	type: "Sigmoid"
	bottom: "mask_pred"
	top: "mask_output"
}

layer {
	name: "mask_proposal"
	type: 'Python'
	bottom: 'mask_output'
	top: 'mask_proposal'
	python_param {
		module: 'multitask_network_cascades.pylayer.mask_layer'
		layer: 'MaskLayer'
	}
}

layer {
	name: "mask_resize"
	type: "Module"
	bottom: "mask_proposal"
	top: "mask_proposal_resize"
	module_param {
		module: "mnc"
		type: "MaskResize"
		param_str: "{ 'output_width': 14, 'output_height': 14 }"
	}
}

#------------ Box Features ------------

layer {
	name: "roi_interpolate_conv5_box"
	type: "Pooling"
	bottom: "roi_interpolate_conv5"
	top: "roi_interpolate_conv5_box"
	pooling_param {
		kernel_size: 2
		stride: 2
		pad: 0
		pool: MAX
	}
}

layer {
	name: "fc6"
	type: "InnerProduct"
	bottom: "roi_interpolate_conv5_box"
	top: "fc6"
	param {
		name: "fc6_w"
	}
	param {
		name: "fc6_b"
	}
	inner_product_param {
		num_output: 4096
	}
}

layer {
	name: "relu6"
	type: "ReLU"
	bottom: "fc6"
	top: "fc6"
}

layer {
	name: "fc7"
	type: "InnerProduct"
	bottom: "fc6"
	top: "fc7"
	param {
		name: "fc7_w"
	}
	param {
		name: "fc7_b"
	}
	inner_product_param {
		num_output: 4096
	}
}

layer {
	name: "relu7"
	type: "ReLU"
	bottom: "fc7"
	top: "fc7"
}

#------------ Mask Features ------------

layer {
	name: "mask_pooling"
	type: "Module"
	bottom: "roi_interpolate_conv5"
	bottom: "mask_proposal_resize"
	top: "roi_mask_conv5"
	module_param {
		module: "mnc"
		type: "MaskPooling"
	}
}

layer {
	name: "roi_interpolate_conv5_mask"
	type: "Pooling"
	bottom: "roi_mask_conv5"
	top: "roi_interpolate_conv5_mask"
	pooling_param {
		kernel_size: 2
		stride: 2
		pad: 0
		pool: MAX
	}
}

layer {
	name: "fc6_mask"
	type: "InnerProduct"
	bottom: "roi_interpolate_conv5_mask"
	top: "fc6_mask"
	param {
		name: "fc6_mask_w"
	}
	param {
		name: "fc6_mask_b"
	}
	inner_product_param {
		num_output: 4096
	}
}

layer {
	name: "relu6_mask"
	type: "ReLU"
	bottom: "fc6_mask"
	top: "fc6_mask"
}

layer {
	name: "fc7_mask"
	type: "InnerProduct"
	bottom: "fc6_mask"
	top: "fc7_mask"
	param {
		name: "fc7_mask_w"
	}
	param {
		name: "fc7_mask_b"
	}
	inner_product_param {
		num_output: 4096
	}
}

layer {
	name: "relu7_mask"
	type: "ReLU"
	bottom: "fc7_mask"
	top: "fc7_mask"
}

#----- Concat Box-Mask Feature -----

layer {
	name: "join_box_mask"
	type: "Concat"
	bottom: "fc7_mask"
	bottom: "fc7"
	top: "join_box_mask"
	concat_param {
		axis: 1
	}
}

#----- Box-level Classification -----

layer {
	name: "cls_score"
	type: "InnerProduct"
	bottom: "join_box_mask"
	top: "cls_score"
	param {
		name: "cls_score_w"
	}
	param {
		name: "cls_score_b"
	}
	inner_product_param {
		num_output: {{ num_classes }}
	}
}

layer {
	name: "cls_prob"
	type: "Softmax"
	bottom: "cls_score"
	top: "cls_prob"
	loss_param {
		ignore_label: -1
		normalize: true
	}
}

#----- Mask-level Classification -----

layer {
	name: "seg_cls_score"
	type: "InnerProduct"
	bottom: "join_box_mask"
	top: "seg_cls_score"
	param {
		name: "seg_cls_score_w"
	}
	param {
		name: "seg_cls_score_b"
	}
	inner_product_param {
		num_output: {{ num_classes }}
	}
}

layer {
	name: "seg_cls_prob"
	type: "Softmax"
	bottom: "seg_cls_score"
	top: "seg_cls_prob"
	loss_param {
		ignore_label: -1
		normalize: true
	}
}

#----- Bounding-box Regression -----

layer {
	name: "bbox_pred"
	type: "InnerProduct"
	bottom: "join_box_mask"
	top: "bbox_pred"
	param {
		name: "bbox_pred_w"
	}
	param {
		name: "bbox_pred_b"
	}
	inner_product_param {
		num_output: {{ num_classes * 4 }}
	}
}



